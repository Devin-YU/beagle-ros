Reports of the Beagle-ROS project:
====================================
====================================

Week 1:
=======
What has been accomplished?:
    - Angstrom distribution running in the BB
    - ROS running installed in Angstrom through the script https://github.com/vmayoral/beagle-ros/blob/master/ros-angstrom.sh
    - roscore running
    - ros installation working against an external master (rosnode list and rosnode ping)

 Issues:
    - It seems ROS nodes doesn't start properly. This is an issue previosly opened in the meta-ros project https://github.com/bmwcarit/meta-ros/issues/68. I'm actively working to find a solution with the meta-ros guys https://github.com/bmwcarit/meta-ros/issues/10  but it might take a while since this issue has been open for some time already.
    - catkin_make doesn't work. Neither it does going through the process manually http://www.ros.org/wiki/catkin/commands/catkin_make.

 Plans for the next week:
    - Adress the first issue. Try to make the ROS nodes start properly. Some debugging will be necessary.
    - Address catkin_make issue.
    - complete the rosping milestone
    - keep working in the roadmap planned (ROS tutorials for now).

    

Week 2:
=======
What has been accomplished?:
    - Several tests with ROS nodes and ping. It seems the nodes launched from external cores work fine while the nodes launched from the BeagleBone (Angstrom, meta-ros) don't seem to work. See issue #10 at the meta-ros code (https://github.com/bmwcarit/meta-ros/issues/10)
    - python-catkin updated. Due to this update there's some progress in the catkin_make process
    - started debugging the ros nodes

 Issues:
    - ROS nodes still doesn't work as expected. See the debug logs at #10.
    - catkin_make doesn't fully work in Angstrom. See #99 (https://github.com/bmwcarit/meta-ros/issues/99).

 Plans for the next week:
    - Address catkin_make issue.
    - Keep debugging the nodes.
    - keep working in the roadmap planned (ROS tutorials for now).

    

Week 3:
=======
What has been accomplished?:
    - ROS nodes now work properly if launched from the bone. ROS ping works from every every node now.
    - catkin_make issue solved.
    - Progress with tutorials.

 Issues:
    - rospack depends1 not working (meta-ros issue #108). For now this task will be left for a latter time.
    - building ROS packages in the bone using catkin_make (meta-ros issue #109). Like the previous one, it requires too much work for now. 

 Plans for the next week:
    - Since building the ROS packages natively with catkin_make might lead to a route that could take several weeks to complete, this task will be done
        using the cross-compiler. A tutorial will be created for this purpose.
    - Continue with ROS tutorials.



Week 4:
=======
What has been accomplished?:
    - More progress with tutorials.
    - Cross-compilation ROS package example created (beginner_tutorials).
    - Cross-compilation of ros_tutorials 

 Issues:
    - When trying to remove a package through opkg "opkg remove roscpp-tutorials*.ipkg". It says "No packages removed".
    - ros_tutorials: turtlesim doesn't compile, there's an error that should be addressed.
    - common_tutorials: same issue, there's an error when cross-compiling.
    
 Plans for the next week:
    - Address the issues with ros_tutorials and common_tutorials.
    - Get started with the sensors interfacing. Since i still haven't received the Audio cape the IMU will be addressed first. It's necessary to set the
    right connections (in this case through the I2C port) and check that the driver is working as expected.
    - It has been released a new driver for the IMU to be used (MPU-9150). It might be interesting to integrate this new driver too (https://github.com/Pansenti/linux-mpu9150).


Week 5:
=======
What has been accomplished?:
    - opkg remove was just a matter of using the package name (instead of the file name).
    - ros-tutorials and ros-common recipes modified to  include all the necessary compile and runtime dependencies (still some don't compile)
    - diving-meta-ros repo created to introduce the necessary steps about how to create a bitbake recipe from a ROS package.xml (suggested by the BMW guys)
    - mpu-9150 driver recipe created. The recipe cross-compiles the driver but there's a need to specify what/where to install.
    - linux-mpu9150 compiled compiled both natively and using the cross-compiler.
    - linux-mpu9150 driver seems to work fine.

 Issues:
    - turtlesim and the common-tutorials packages don't cross-compile. It seems these tutorials should be addressed with more calm since the solution isn't obvious.
    - mpu-9150_git.bb recipe compiles the driver however it doesn't ship it (https://github.com/vmayoral/beagle-ros/blob/master/recipes/mpu-9150/mpu-9150_git.bb)
    - the kernel module driver for the MPU-6050 doesn't work.  I tried the fix "echo inv_mpu6050 0x68 > /sys/class/i2c-adapter/i2c-1/new_device" however it doesn't seem to created the files expected under /sys/bus/iio/devices/.

    
 Plans for the next week:
    - Finish the diving-meta-ros repo, a repository created to ilustrate how-to write a bitbake recipe from a ros package (meta-ros guys consider it's necessary).
    - Keep digging into the IMU hardware issues.
    - Start developing a node that publishes the information of the IMU.



Week 6:
=======
What has been accomplished?:
    - [diving-meta-ros](https://github.com/vmayoral/diving-meta-ros) repo. See issue [#110](https://github.com/bmwcarit/meta-ros/issues/110) in meta-ros.
    - Adapt ros-tutorials recipes to the meta-ros policies. Issue [#124](https://github.com/bmwcarit/meta-ros/issues/124) in meta-ros. 
    - push ros-tutorials recipes and common-tutorials recipes to meta-ros.
    - MPU-9150 userspace code inspected and adapted to the rosnode.
    - ros-mpu9150 repo created (https://github.com/vmayoral/ros-mpu9150). This repo will contain a ROS package that publishes the Invensense MPU-9150 data into a topic

Issues:
    - Turtlesim and some of the common-tutorials recipes don't cross-compile yet.
    - Errors when compiling (headers and linking) ros-mpu9150 code through `catkin_make``. Need to be inspected.
    
Plans for the next week:
    - Keep working in the ros-mpu9150 code.
    - Create a ros-bb-dc-motors repo that launches a ROS node which drives a DC Motor 


Week 7:
=======
What has been accomplished?:
    - ros-mpu9150 coded. The code reuses the linux-mpu9150 userspace driver.
    - ros_bb_dc_motors created.
    - ros-mpu9150 node works in the BB.
    - Issues when linking ros-mpu9150 code. Fixed.
    - Issues when cross-compiling the linux-mpu9150 through a bitbake recipe. Although the code seems to compile nothing ships. Also the work directory seems to be empty. Fixed.
    - ros-mpu9150 doesn't seem to publish in the Topic assigned. Fixed.
    - [adafruit-beaglebone-io-python](https://github.com/adafruit/adafruit-beaglebone-io-python) tested and installed. It works fine and the ROS package to control the motors will probably be developed using this library.


Issues:
    - ros-mpu9150 node doesn't stop when "Ctrl+C" is used. Has to be manually killed.
    - rqt_graph against the core (Issue #130). Seems to be fixed but it might be better to keep this thing in mind.
    - ROS Topics not readable outside the machine (Issue #134)
    
Plans for the next week:
    - Create a ROS node for the DC motors using adafruit-beaglebone-io-python.
    - Explore the communication between the mpu9150_node already created and the new one to control the DC motors.


Week 8:
=======
What has been accomplished?:
    - Minor detail with .bashrc and .bash_profile in Angstrom. In order to use them it's needed to:
        1. modify /etc/passwd to run root with a bash shell (instead of sh)
        2. create .bash_profile and source .bashrc inside of it.
        3. create .bashrc with whatever is needed
    - opkg upgrade issue (When i try to upgrade the packages in my BB using "opkg upgrade" (after having updated the sources) i get nothing. The program finishes without outputing anything. Fixed. Changed /etc/opkg files to point to the "eu" preffix URLs.
    - Necessary to source rosbash so that roscd, rosls and so on are available (/usr/share/rosbash/rosbash)
    - ROS updated to hydro.
    - ros_bb_dc_motors ROS package finished.
    - Working example with ros_mpu9150 and ros_bb_dc_motors ROS packages. Video uploaded showing how a PWM signal is modified with the IMU.
    - Sharp IR sensor interfaced.
    - All the cross-compiled packages in the repo and create a script that installs ROS from those fixed packages.
    - Sharp IR sensor ROS package. 
    - ROS Topics not readable outside the machine (Issue #134)
    - rqt_graph against the core (Issue #130). Seems to be fixed but it might be better to keep this thing in mind. Fixed
    - ros_controls (cmake-modules, control-msg, ros-control, ros-controllers, tinyxml, ...) recipes created.

Issues:
    - ros-mpu9150 node doesn't stop when "Ctrl+C" is used. Has to be manually killed.
    - When upgrading a set of packages through "opkg upgrade <whatever>", after a while, the BB looses connection. I believe this is because the file /etc/resolv.conf gets overwritten by the Connection Manager.
    - when updating to the new meta-ros hydro version, "python-netifaces" dependency can't be satisfied. It should be uploaded to the Angstrom repositories.
    
Plans for the next week:
    - code the bb_altimeter ROS package (MPL3115A2 sensor)
    - document the ROS packages created according to the ROS documentations conventions.
    - continue with the ros_controls recipes.
   

Week 9:
=======
What has been accomplished?:
    - New scripts added to the scripts/ directory.
    - code the bb_altimeter ROS package (MPL3115A2 sensor)
    - recipes documented at https://github.com/vmayoral/beagle-ros/blob/master/recipes/README.md

Issues:
    - This [script](https://github.com/vmayoral/bb_altimeter/blob/master/tests/register_test.py) works with the MPU9150 connected to the I2C-1 bus but not with the MPL sensor connected to the same bus. i2ctools give the correct value thought. A [python script](https://github.com/vmayoral/bb_altimeter/blob/master/scripts/i2ctools_python.py) that uses i2ctools has been created to address this issue.
    - urdfdom (ros_control) compiling issues when `inherit cmake`.
    
Plans for the next week:
    - Add more IR sensors to the bb_sharp_ir ROS package (GP2Y0D810Z0F and GP2Y0D805Z0F).
    - continue with the ros_controls recipes.
    - document the ROS packages created according to the ROS documentations conventions.
   



Week 10:
=======
What has been accomplished?:
    - Add more IR sensors to the bb_sharp_ir ROS package (GP2Y0D810Z0F and GP2Y0D805Z0F).
    - Modified the minimal-ros-install-angstrom.sh script to configure the environment automatically.
    - Tested installation scripts from a clean Angstrom installation (BeagleBone and in the Beaglebone Black).

Issues:
    - new bb_sharp_ir scripts remain untested until i receive the soldered sensor.
    - when using the [i2ctools_python](https://github.com/vmayoral/bb_battery/blob/master/scripts/i2ctools_python.py) class created with the PMIC, writing to a register is not possible (register remain unchanged).
    - issue when installing adafruit-beaglebone-io library (https://github.com/adafruit/adafruit-beaglebone-io-python?source=c) over the provided Angstrom FS Angstrom-systemd-image-eglibc-ipk-v2012.12-beaglebone-2013.07.31.rootfs.tar.xz (http://downloads.angstrom-distribution.org/demo/beaglebone/). Issue after installing kernel-dev and kernel-headers with "limits.h".
    - Turtlesim (ros-tutorials) recipe has been updated but it still doesn't cross-compile. The reasons are discussed here https://groups.google.com/forum/#!topic/beagleboard-gsoc/VXO2vFNPYXE.
    
Plans for the next week:
    - converting bb_dc_motors to C and use the sysfs interface for pwms
    - continue with the ros_controls recipes.
    - document the ROS packages created according to the ROS documentations conventions.
    - finish the tests (BB and BBB) rest of the packages. (give feedback about it https://github.com/bmwcarit/meta-ros/issues/123)
   


Week 11:
=======
What has been accomplished?:
    - converting bb_dc_motors to C and use the sysfs interface for pwms
    - new bb_sharp_ir scripts tested with the received sensors.
    - [FAQ](https://github.com/vmayoral/beagle-ros/wiki/FAQ) created. 
    - ROS packages documented (bb_altimeter, bb_mpu9150, ...)
    - Created a wiki page about BeagleBone (http://wiki.ros.org/BeagleBone).
    - Created a wiki page for Angstrom (http://wiki.ros.org/hydro/Installation/Angstrom).
    - Included Angstrom as a supported platform (http://wiki.ros.org/hydro/Installation/Platforms).
    - Tests are fine. All the packages work both in the BB and in the BBB running Angstrom.

Issues:
    - Turtlesim (ros-tutorials) recipe has been updated but it still doesn't cross-compile. The reasons are discussed here https://groups.google.com/forum/#!topic/beagleboard-gsoc/VXO2vFNPYXE.
    - Some missing dependencies with ros_control recipes: wxwidgets, collada-dom, wxpython, orocos-kdl. WIP.
    
Plans for the next week:
    - continue with the ros_controls recipes and the turtlesim one.
    - answer mails and keep improving documentation.
   



Week 12:
=======
What has been accomplished?:
    - Some progress with ros_tutorials: assimp recipe added.
    - Fritzing models added to docs/fritzing_models.
    - orocos-kdl and python-orocos-kdl recipes created.
    - eigen recipe created. Needs more work.
    - recipes updated according to meta-ros criteria.

Issues:
    - Turtlesim (ros-tutorials) recipe has been updated but it still doesn't cross-compile. The reasons are discussed here https://groups.google.com/forum/#!topic/beagleboard-gsoc/VXO2vFNPYXE.
    - Some missing dependencies with ros_control recipes: wxwidgets, collada-dom, wxpython, orocos-kdl. WIP.
    - orocos-kdl: issue finding eigen3 (it seems Angstrom has an issue in general with Find macro). eigen recipes created. This issue could also be solved using "koen's first suggestion" but i'm not sure how yet.
    
Plans for the next week:
    - Merge the ros-control recipes that compile properly with meta-ros.
    - continue with the ros_controls recipes and the turtlesim one.
    - answer mails and keep improving documentation.

Questions:
    - regarding the first option to deal with the Find* problems, i'm not sure where is should add that cmake option. A line containing "ADD_DEFINITIONS(-DEIGEN3_INCLUDE_DIR=${STAGING_INCDIR})" here https://github.com/smits/orocos-kdl-release/blob/release/hydro/orocos_kdl/CMakeLists.txt#L48?
   

Week 13:
=======
What has been accomplished?:
    - orocos-kdl recipe completed.
    - new ros_controls related recipes added: geometric-shapes, random-numbers, octomap, libqhull, eigen-stl-containers,shape-tools, collada-dom.
    - Pull request with ros_controls recipes to the meta-ros repository.
    - Pull request to ros_controls/ros_control with the recipes patches (https://github.com/ros-controls/ros_control/pull/114).

Issues:
    - Turtlesim (ros-tutorials) recipe has been updated but it still doesn't cross-compile. The reasons are discussed here https://groups.google.com/forum/#!topic/beagleboard-gsoc/VXO2vFNPYXE.
    - python-orocos-kdl
    - kdl-parser (same issue as with python-orocos-kdl)
    - collada-urdf
                take into account Koen's comment: vmayoral: /usr/lib/liboctomap.so <- something is adding /usr/lib, which won't work for cross compiling
    
Plans for the next week:
    - Finish documentation
    - Continue with the ros_controls recipes and the turtlesim one.
    - Give it a try to vvu|Log BeagleDroid project.

-----------------------------

OUT OF GSOC

-----------------------------

Week 14:
=======
What has been accomplished?:
    - Testing I2C bus with several sensors.
    - Reviewing ros_control recipes.

Issues:
    - Turtlesim (ros-tutorials) recipe has been updated but it still doesn't cross-compile. The reasons are discussed here https://groups.google.com/forum/#!topic/beagleboard-gsoc/VXO2vFNPYXE.
    - python-orocos-kdl
    - kdl-parser (same issue as with python-orocos-kdl)
    - collada-urdf
                take into account Koen's comment: vmayoral: /usr/lib/liboctomap.so <- something is adding /usr/lib, which won't work for cross compiling
    
    - Issue with ros-controllers recipes after updating to 1.10.15. :
    Make Error at CMakeLists.txt:9 (find_package):
    |   By not providing "FindTinyXML.cmake" in CMAKE_MODULE_PATH this project has
    |   asked CMake to find a package configuration file provided by "TinyXML", but
    |   CMake did not find one.

    This is something known however it keeps appearing even though i did bitbake libtinyxml
