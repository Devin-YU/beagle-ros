Issues with ROS Tutorials (http://www.ros.org/wiki/ROS/Tutorials)


Tutorial 1. Installing and Configuring Your ROS Environment 
==========
(http://www.ros.org/wiki/ROS/Tutorials/InstallingandConfiguringROSEnvironment):

    - Initial issues with catkin_make
    - Completed



Tutorial 2. Navigating the ROS Filesystem
==========
(http://www.ros.org/wiki/ROS/Tutorials/NavigatingTheFilesystem)

    - In order to work with rosbash suite, it's necessary to source setup.bash (surprisingly if setup.sh is sourced it doesn't get in the PATH)
    - Necessary to set up ROS_WORKSPACE
         export ROS_WORKSPACE="/home/root/catkin_ws/devel/"
    -  $ROS_PACKAGE_PATH correctly set if the setup.bash sourced is the one in the workspace
    - Completed



Tutorial 3. Creating a ROS Package
==========
(http://www.ros.org/wiki/ROS/Tutorials/CreatingPackage)
    
    - rospack depends1 beginner_tutorials (or roscpp) not working properly
    - error. see issue https://github.com/bmwcarit/meta-ros/issues/108
    - Answered at https://github.com/bmwcarit/meta-ros/issues/108
    rosdep is a tool for managing the package dependencies in various distributions uniformly. To get rosdep working, you would have to know which package manager your distribution uses (I think Angstrom uses ipkg), and them add support for that tool in rosdep. Furtermore, you would have to provide a mapping from ubuntu package names to ipkg package names in the yaml file.
    I consider this a lot of work for just a minor point, namely to use rosdep instead of using ipkg, which works nicely anyway. Maybe, it is better when you look into the more advanced ROS application tutorials and try to cross-compile those and make a documentation how to write recipes for those. The system/developer tools, like catkin_make and rosdep, do not need to run on the beagleboard anyway when you cross-compile.


Tutorial 4. Creating a workspace for catkin
==========
(http://www.ros.org/wiki/catkin/Tutorials/create_a_workspace)

    - Completed


Tutorial 5. Building a ROS Package
==========
(http://www.ros.org/wiki/ROS/Tutorials/BuildingPackages)

    - Error. See issue https://github.com/bmwcarit/meta-ros/issues/109
    - Answer at https://github.com/bmwcarit/meta-ros/issues/109
    This is a clone of #103. As I said there, it is difficult and of low priority. You do not want to compile on the target anyway, but you want to compile the beginner tutorials on the host system for the target and then only run the tutorials on the target system. How about creating a recipe for the beginner_tutorials?



Tutorial 6. Creating a ROS Package (seems to be same as Tutorial 3)
==========


Tutorial 7. Understanding ROS Nodes
==========
(http://www.ros.org/wiki/ROS/Tutorials/UnderstandingNodes)
    - Completed.
        Turtlesim has been run in a Desktop machine agains the core running in the beaglebone. It's necessary to set the hosts at /etc/hosts
    - The nodes that have been launched even after stopping them "rosnode list" shows them. This is an issue that also appears in the Desktop version of ROS. (this seems to happen with turtlesim)


Tutorial 8. Building and using catkin packages in a workspace
==========
(http://www.ros.org/wiki/catkin/Tutorials/using_a_workspace)
    - Since building (for now) will be done using the cross-compiler (see issues with Tutorial 5) the deployment of the packages built won't be done through "catkin_make" install
        but it will be decided through the bitbake recipes.


Tutorial 9. Understanding ROS Topics
==========
(http://www.ros.org/wiki/ROS/Tutorials/UnderstandingTopics)
    - Completed (the turtlesim and rqt_graph were run in a Desktop machine)


Tutorial 15. Using rosed to edit files in ROS
==========
(http://www.ros.org/wiki/ROS/Tutorials/UsingRosEd)
    - Completed


Tutorial 16-19. Writing a Simple Publisher and Subscriber
==========
    - Completed. The code has been published at https://github.com/vmayoral/beginner_tutorials
